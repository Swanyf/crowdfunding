<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swan.crowdfunding.component.mapper.UserDOMapper">
	<resultMap id="BaseResultMap" type="com.swan.crowdfunding.entity.UserDO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.swan.crowdfunding.entity.UserDO">
		insert into t_user (id, loginacct, userpswd,
		username, email, createtime
		)
		values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.swan.crowdfunding.entity.UserDO">
		update t_user
		set loginacct = #{loginacct,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
	</select>
	<select id="getUserDOByAccount" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		where loginacct=#{loginacct}
	</select>
	<select id="selectForSearch" resultMap="BaseResultMap">
	    select id, loginacct, userpswd, username, email, createtime
        from t_user
        where 
        loginacct like concat('%',#{keyword},'%') or 
        username like concat('%',#{keyword},'%') or
        email like concat('%',#{keyword},'%')
	</select>
	<delete id="deleteUsersByIdList">
        delete from t_user
        where id in
        <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>
    <select id="getUsersByIdList" resultMap="BaseResultMap">
        select id, loginacct, userpswd, username, email, createtime
        from t_user
        where id in  
         <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </select>
    <select id="getUserByLoginAccount" resultType="Integer">
        select count(*) from t_user where loginacct = #{loginacct}
    </select>
</mapper>